stages:
    - build
    - lint-format
    - deploy

.pipenv_job: &pipenv_job
    image: python:3.8.1
    before_script:
        - pip install pipenv
    variables:
        PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
        WORKON_HOME: "$CI_PROJECT_DIR/venv"

.python_formatter_linter_jobs_base: &python_formatter_linter_jobs_base
    <<: *pipenv_job
    stage: lint-format
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        - if: '$CI_COMMIT_BRANCH == "master"'
        - if: $CI_COMMIT_TAG
    needs:
        - job: install_pipenv
          artifacts: true

install_pipenv:
    stage: build
    <<: *pipenv_job
    script:
        - apt update -y
        - env VIRTUALENV_COPIES=1 pipenv sync --dev
    artifacts:
        paths:
            - .cache/pip
            - venv/
        expire_in: 1 day
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        - if: '$CI_COMMIT_BRANCH == "master"'

install_node:
    image: node:14.13.0-stretch
    stage: build
    script:
        - yarn install
    artifacts:
        paths:
            - node_modules/
        expire_in: 1 day
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        - if: '$CI_COMMIT_BRANCH == "master"'

eslint:
    image: node:14.13.0-stretch
    stage: lint-format
    script:
        - yarn run lint
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        - if: '$CI_COMMIT_BRANCH == "master"'
        - if: $CI_COMMIT_TAG
    needs:
        - job: install_node
          artifacts: true

flake8:
    <<: *python_formatter_linter_jobs_base
    script:
        - pipenv run flake8

black:
    <<: *python_formatter_linter_jobs_base
    script:
        - pipenv run black . --check

isort:
    <<: *python_formatter_linter_jobs_base
    script:
        - pipenv run isort . --check

heroku:
    image: ruby:3.0.0
    stage: deploy
    dependencies: []
    script:
        - apt update -qy
        - apt install -y ruby-dev
        - gem install dpl
        - dpl --provider=heroku --app=p-expense-counter --api-key=$HEROKU_API_KEY
    rules:
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: manual
